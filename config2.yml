# Specify input data and output folders
input_data_folder: "/home/mmantyla/Datasets/comp_ws/all_data_10_percent"
output_folder: "/home/mmantyla/output/comp_ws_10"

# Do you want to mask, e.g., 192.168.1.1 -> <IP>?
# If unsure, the answer is YES.
# Modify masks names in regex_masking.py
regex_masking:
  enabled: true
  pattern:
    - name: "myllari_extended" #Only one name currently supported. 

# Do you want to pre-parse? This only works if regex_masking is enabled.
# Set "enabled: true" only if your steps utilize options like Parse-Tip or Parse-Drain.
# Otherwise, set it to false.
# If pre-parsing is not enabled and you utilize, for example, Parse-Tip, 
# the parse call may occur multiple times on subsets of data, which could impact performance.
pre_parse:
  enabled: false
  parsers: 
    - name: "Parse-Tip" #Other valid parse options are Parse-Drain, Parse-Brain and everything that is listed as parse_*() in https://github.com/EvoTestOps/LogLead/blob/main/loglead/enhancers/eventlog.py
    #- name: "Parse-Drain"


steps:
  # Compare two runs (folders) and report file distance without looking file contents
  distance_run_file:
    - target_run: "1_33_1409"
      comparison_runs: "ALL"

  distance_run_content:
    - target_run: "1_33_1409"
      comparison_runs:
        - "1_33_1413"
        - "2_33_1404"
        - "2_MSI_33_64"
      normalize_content: False

  distance_file_content:
    - target_run: "1_33_1409"
      comparison_runs:
        - "1_33_1413"
        - "2_33_1404"
      normalize_content: True
    - target_run: "1_33_1409"
      comparison_runs:
        - "1_33_1413"
        - "2_33_1404"
      normalize_content: False
  
  distance_line_content:
    - target_run: "1_33_1409"
      target_files:
      - "win/eventlog/security.log"
      - "win/registry/reg_services.log"
      comparison_runs:
      - "1_33_1413"
      - "2_33_1404"
      normalize_content: True

  plot_run_file:
    - target_run: "1_33_1409"
      comparison_runs: "ALL"
      random_seed: 43

  plot_file_content:
    - target_run: "1_33_1409"
      comparison_runs: "ALL"
      target_files:
       - "win/eventlog/security.log"
       - "firewall/wfp_filters.log"
       - "win/registry/reg_services.log"

  #Build an anomaly detection model based on comparisons runs (folders). Use it to evalute target_run 
  anomaly_run_file: 
    - target_run: 3 #for anomaly_run_file we can also specify a number for target_run
      comparison_runs: 10

  anomaly_run_content:
    - target_run: 3
      comparison_runs: 10 #for anomaly_run_file we can also specify a number for target_run
      normalize_content: False

  anomaly_file_content:
    - target_run: "1_33_1409"
      target_files:
        - "win/eventlog/security.log"
        - "firewall/wfp_filters.log"
        - "win/registry/reg_services.log"
      comparison_runs: 10
      normalize_content: True

  anomaly_line_content:
    - target_run: "1_33_1409"
      target_files:
        - "win/eventlog/security.log"
        - "firewall/wfp_filters.log"
        - "win/registry/reg_services.log"
      comparison_runs: "ALL"
      normalize_content: False



